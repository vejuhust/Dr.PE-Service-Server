//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Analyst_Hospital", "Hospital", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.Hospital), "Analyst", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Analyst), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Appointment_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.Doctor), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Appointment), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Appointment_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.User), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Appointment), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_CaseHistory_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Doctor), "CaseHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.CaseHistory), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_CaseHistory_Examination", "Examination", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Examination), "CaseHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.CaseHistory), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_CaseHistory_Hospital", "Hospital", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Hospital), "CaseHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.CaseHistory), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_CaseHistory_Prescription", "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Prescription), "CaseHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.CaseHistory), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_CaseHistory_Section", "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Section), "CaseHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.CaseHistory), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_CaseHistory_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.User), "CaseHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.CaseHistory), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_WareSense_Disease", "Disease", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Disease), "WareSense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.WareSense), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Doctor_Section", "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.Section), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Doctor), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Doctor_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.User), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Doctor), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Schedule_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.Doctor), "Schedule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Schedule), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Pharmacy_Hospital", "Hospital", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Hospital), "Pharmacy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Pharmacy), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Section_Hospital", "Hospital", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.Hospital), "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Section), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_PharmacyDatabase_Pharmacy", "Pharmacy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.Pharmacy), "PharmacyDatabase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.PharmacyDatabase), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Transaction_Pharmacy", "Pharmacy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Pharmacy), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Transaction), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_PharmacyDatabase_Physic", "Physic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.Physic), "PharmacyDatabase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.PharmacyDatabase), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_VerandaLonely_Section", "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.Section), "VerandaLonely", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.VerandaLonely), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_Transaction_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DrPEServer.DrPEServerDAL.User), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.Transaction), true)]
[assembly: EdmRelationshipAttribute("DrPEDatabaseModel", "FK_User_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DrPEServer.DrPEServerDAL.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DrPEServer.DrPEServerDAL.User), true)]

#endregion

namespace DrPEServer.DrPEServerDAL
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class DrPEDatabaseEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“DrPEDatabaseEntities”部分中的连接字符串初始化新 DrPEDatabaseEntities 对象。
        /// </summary>
        public DrPEDatabaseEntities() : base("name=DrPEDatabaseEntities", "DrPEDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 DrPEDatabaseEntities 对象。
        /// </summary>
        public DrPEDatabaseEntities(string connectionString) : base(connectionString, "DrPEDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 DrPEDatabaseEntities 对象。
        /// </summary>
        public DrPEDatabaseEntities(EntityConnection connection) : base(connection, "DrPEDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Analyst> Analysts
        {
            get
            {
                if ((_Analysts == null))
                {
                    _Analysts = base.CreateObjectSet<Analyst>("Analysts");
                }
                return _Analysts;
            }
        }
        private ObjectSet<Analyst> _Analysts;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Appointment> Appointments
        {
            get
            {
                if ((_Appointments == null))
                {
                    _Appointments = base.CreateObjectSet<Appointment>("Appointments");
                }
                return _Appointments;
            }
        }
        private ObjectSet<Appointment> _Appointments;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CaseHistory> CaseHistories
        {
            get
            {
                if ((_CaseHistories == null))
                {
                    _CaseHistories = base.CreateObjectSet<CaseHistory>("CaseHistories");
                }
                return _CaseHistories;
            }
        }
        private ObjectSet<CaseHistory> _CaseHistories;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Disease> Diseases
        {
            get
            {
                if ((_Diseases == null))
                {
                    _Diseases = base.CreateObjectSet<Disease>("Diseases");
                }
                return _Diseases;
            }
        }
        private ObjectSet<Disease> _Diseases;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Examination> Examinations
        {
            get
            {
                if ((_Examinations == null))
                {
                    _Examinations = base.CreateObjectSet<Examination>("Examinations");
                }
                return _Examinations;
            }
        }
        private ObjectSet<Examination> _Examinations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Hospital> Hospitals
        {
            get
            {
                if ((_Hospitals == null))
                {
                    _Hospitals = base.CreateObjectSet<Hospital>("Hospitals");
                }
                return _Hospitals;
            }
        }
        private ObjectSet<Hospital> _Hospitals;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Master> Masters
        {
            get
            {
                if ((_Masters == null))
                {
                    _Masters = base.CreateObjectSet<Master>("Masters");
                }
                return _Masters;
            }
        }
        private ObjectSet<Master> _Masters;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Pharmacy> Pharmacies
        {
            get
            {
                if ((_Pharmacies == null))
                {
                    _Pharmacies = base.CreateObjectSet<Pharmacy>("Pharmacies");
                }
                return _Pharmacies;
            }
        }
        private ObjectSet<Pharmacy> _Pharmacies;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PharmacyDatabase> PharmacyDatabases
        {
            get
            {
                if ((_PharmacyDatabases == null))
                {
                    _PharmacyDatabases = base.CreateObjectSet<PharmacyDatabase>("PharmacyDatabases");
                }
                return _PharmacyDatabases;
            }
        }
        private ObjectSet<PharmacyDatabase> _PharmacyDatabases;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Physic> Physics
        {
            get
            {
                if ((_Physics == null))
                {
                    _Physics = base.CreateObjectSet<Physic>("Physics");
                }
                return _Physics;
            }
        }
        private ObjectSet<Physic> _Physics;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Prescription> Prescriptions
        {
            get
            {
                if ((_Prescriptions == null))
                {
                    _Prescriptions = base.CreateObjectSet<Prescription>("Prescriptions");
                }
                return _Prescriptions;
            }
        }
        private ObjectSet<Prescription> _Prescriptions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Schedule> Schedules
        {
            get
            {
                if ((_Schedules == null))
                {
                    _Schedules = base.CreateObjectSet<Schedule>("Schedules");
                }
                return _Schedules;
            }
        }
        private ObjectSet<Schedule> _Schedules;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Section> Sections
        {
            get
            {
                if ((_Sections == null))
                {
                    _Sections = base.CreateObjectSet<Section>("Sections");
                }
                return _Sections;
            }
        }
        private ObjectSet<Section> _Sections;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VerandaLonely> VerandaLonelies
        {
            get
            {
                if ((_VerandaLonelies == null))
                {
                    _VerandaLonelies = base.CreateObjectSet<VerandaLonely>("VerandaLonelies");
                }
                return _VerandaLonelies;
            }
        }
        private ObjectSet<VerandaLonely> _VerandaLonelies;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WareSense> WareSenses
        {
            get
            {
                if ((_WareSenses == null))
                {
                    _WareSenses = base.CreateObjectSet<WareSense>("WareSenses");
                }
                return _WareSenses;
            }
        }
        private ObjectSet<WareSense> _WareSenses;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Analysts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAnalysts(Analyst analyst)
        {
            base.AddObject("Analysts", analyst);
        }
    
        /// <summary>
        /// 用于向 Appointments EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAppointments(Appointment appointment)
        {
            base.AddObject("Appointments", appointment);
        }
    
        /// <summary>
        /// 用于向 CaseHistories EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCaseHistories(CaseHistory caseHistory)
        {
            base.AddObject("CaseHistories", caseHistory);
        }
    
        /// <summary>
        /// 用于向 Diseases EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDiseases(Disease disease)
        {
            base.AddObject("Diseases", disease);
        }
    
        /// <summary>
        /// 用于向 Doctors EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// 用于向 Examinations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToExaminations(Examination examination)
        {
            base.AddObject("Examinations", examination);
        }
    
        /// <summary>
        /// 用于向 Hospitals EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToHospitals(Hospital hospital)
        {
            base.AddObject("Hospitals", hospital);
        }
    
        /// <summary>
        /// 用于向 Masters EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMasters(Master master)
        {
            base.AddObject("Masters", master);
        }
    
        /// <summary>
        /// 用于向 Messages EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// 用于向 Pharmacies EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPharmacies(Pharmacy pharmacy)
        {
            base.AddObject("Pharmacies", pharmacy);
        }
    
        /// <summary>
        /// 用于向 PharmacyDatabases EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPharmacyDatabases(PharmacyDatabase pharmacyDatabase)
        {
            base.AddObject("PharmacyDatabases", pharmacyDatabase);
        }
    
        /// <summary>
        /// 用于向 Physics EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPhysics(Physic physic)
        {
            base.AddObject("Physics", physic);
        }
    
        /// <summary>
        /// 用于向 Prescriptions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPrescriptions(Prescription prescription)
        {
            base.AddObject("Prescriptions", prescription);
        }
    
        /// <summary>
        /// 用于向 Schedules EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSchedules(Schedule schedule)
        {
            base.AddObject("Schedules", schedule);
        }
    
        /// <summary>
        /// 用于向 Sections EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSections(Section section)
        {
            base.AddObject("Sections", section);
        }
    
        /// <summary>
        /// 用于向 Transactions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// 用于向 VerandaLonelies EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVerandaLonelies(VerandaLonely verandaLonely)
        {
            base.AddObject("VerandaLonelies", verandaLonely);
        }
    
        /// <summary>
        /// 用于向 WareSenses EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWareSenses(WareSense wareSense)
        {
            base.AddObject("WareSenses", wareSense);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Analyst")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Analyst : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Analyst 对象。
        /// </summary>
        /// <param name="analystID">AnalystID 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="hospitalID">HospitalID 属性的初始值。</param>
        public static Analyst CreateAnalyst(global::System.String analystID, global::System.String password, global::System.String hospitalID)
        {
            Analyst analyst = new Analyst();
            analyst.AnalystID = analystID;
            analyst.Password = password;
            analyst.HospitalID = hospitalID;
            return analyst;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnalystID
        {
            get
            {
                return _AnalystID;
            }
            set
            {
                if (_AnalystID != value)
                {
                    OnAnalystIDChanging(value);
                    ReportPropertyChanging("AnalystID");
                    _AnalystID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AnalystID");
                    OnAnalystIDChanged();
                }
            }
        }
        private global::System.String _AnalystID;
        partial void OnAnalystIDChanging(global::System.String value);
        partial void OnAnalystIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HospitalID
        {
            get
            {
                return _HospitalID;
            }
            set
            {
                OnHospitalIDChanging(value);
                ReportPropertyChanging("HospitalID");
                _HospitalID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HospitalID");
                OnHospitalIDChanged();
            }
        }
        private global::System.String _HospitalID;
        partial void OnHospitalIDChanging(global::System.String value);
        partial void OnHospitalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Analyst_Hospital", "Hospital")]
        public Hospital Hospital
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Analyst_Hospital", "Hospital").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Analyst_Hospital", "Hospital").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hospital> HospitalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Analyst_Hospital", "Hospital");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hospital>("DrPEDatabaseModel.FK_Analyst_Hospital", "Hospital", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Appointment 对象。
        /// </summary>
        /// <param name="appointmentID">AppointmentID 属性的初始值。</param>
        /// <param name="doctorID">DoctorID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        public static Appointment CreateAppointment(global::System.Guid appointmentID, global::System.String doctorID, global::System.String userID)
        {
            Appointment appointment = new Appointment();
            appointment.AppointmentID = appointmentID;
            appointment.DoctorID = doctorID;
            appointment.UserID = userID;
            return appointment;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AppointmentID
        {
            get
            {
                return _AppointmentID;
            }
            set
            {
                if (_AppointmentID != value)
                {
                    OnAppointmentIDChanging(value);
                    ReportPropertyChanging("AppointmentID");
                    _AppointmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AppointmentID");
                    OnAppointmentIDChanged();
                }
            }
        }
        private global::System.Guid _AppointmentID;
        partial void OnAppointmentIDChanging(global::System.Guid value);
        partial void OnAppointmentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DoctorID
        {
            get
            {
                return _DoctorID;
            }
            set
            {
                OnDoctorIDChanging(value);
                ReportPropertyChanging("DoctorID");
                _DoctorID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DoctorID");
                OnDoctorIDChanged();
            }
        }
        private global::System.String _DoctorID;
        partial void OnDoctorIDChanging(global::System.String value);
        partial void OnDoctorIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private Nullable<global::System.Int32> _Rank;
        partial void OnRankChanging(Nullable<global::System.Int32> value);
        partial void OnRankChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Appointment_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_Appointment_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_Appointment_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_Appointment_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("DrPEDatabaseModel.FK_Appointment_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Appointment_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Appointment_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Appointment_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Appointment_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DrPEDatabaseModel.FK_Appointment_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="CaseHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CaseHistory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CaseHistory 对象。
        /// </summary>
        /// <param name="caseID">CaseID 属性的初始值。</param>
        public static CaseHistory CreateCaseHistory(global::System.Guid caseID)
        {
            CaseHistory caseHistory = new CaseHistory();
            caseHistory.CaseID = caseID;
            return caseHistory;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CaseID
        {
            get
            {
                return _CaseID;
            }
            set
            {
                if (_CaseID != value)
                {
                    OnCaseIDChanging(value);
                    ReportPropertyChanging("CaseID");
                    _CaseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CaseID");
                    OnCaseIDChanged();
                }
            }
        }
        private global::System.Guid _CaseID;
        partial void OnCaseIDChanging(global::System.Guid value);
        partial void OnCaseIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DoctorID
        {
            get
            {
                return _DoctorID;
            }
            set
            {
                OnDoctorIDChanging(value);
                ReportPropertyChanging("DoctorID");
                _DoctorID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DoctorID");
                OnDoctorIDChanged();
            }
        }
        private global::System.String _DoctorID;
        partial void OnDoctorIDChanging(global::System.String value);
        partial void OnDoctorIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SectionID
        {
            get
            {
                return _SectionID;
            }
            set
            {
                OnSectionIDChanging(value);
                ReportPropertyChanging("SectionID");
                _SectionID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SectionID");
                OnSectionIDChanged();
            }
        }
        private global::System.String _SectionID;
        partial void OnSectionIDChanging(global::System.String value);
        partial void OnSectionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ExaminationID
        {
            get
            {
                return _ExaminationID;
            }
            set
            {
                OnExaminationIDChanging(value);
                ReportPropertyChanging("ExaminationID");
                _ExaminationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExaminationID");
                OnExaminationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ExaminationID;
        partial void OnExaminationIDChanging(Nullable<global::System.Guid> value);
        partial void OnExaminationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChiefComplaint
        {
            get
            {
                return _ChiefComplaint;
            }
            set
            {
                OnChiefComplaintChanging(value);
                ReportPropertyChanging("ChiefComplaint");
                _ChiefComplaint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChiefComplaint");
                OnChiefComplaintChanged();
            }
        }
        private global::System.String _ChiefComplaint;
        partial void OnChiefComplaintChanging(global::System.String value);
        partial void OnChiefComplaintChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TentativeDiagnosis
        {
            get
            {
                return _TentativeDiagnosis;
            }
            set
            {
                OnTentativeDiagnosisChanging(value);
                ReportPropertyChanging("TentativeDiagnosis");
                _TentativeDiagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TentativeDiagnosis");
                OnTentativeDiagnosisChanged();
            }
        }
        private global::System.String _TentativeDiagnosis;
        partial void OnTentativeDiagnosisChanging(global::System.String value);
        partial void OnTentativeDiagnosisChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DifferentialDiagnosis
        {
            get
            {
                return _DifferentialDiagnosis;
            }
            set
            {
                OnDifferentialDiagnosisChanging(value);
                ReportPropertyChanging("DifferentialDiagnosis");
                _DifferentialDiagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DifferentialDiagnosis");
                OnDifferentialDiagnosisChanged();
            }
        }
        private global::System.String _DifferentialDiagnosis;
        partial void OnDifferentialDiagnosisChanging(global::System.String value);
        partial void OnDifferentialDiagnosisChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PrescriptionID
        {
            get
            {
                return _PrescriptionID;
            }
            set
            {
                OnPrescriptionIDChanging(value);
                ReportPropertyChanging("PrescriptionID");
                _PrescriptionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrescriptionID");
                OnPrescriptionIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PrescriptionID;
        partial void OnPrescriptionIDChanging(Nullable<global::System.Guid> value);
        partial void OnPrescriptionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TreatmentPlan
        {
            get
            {
                return _TreatmentPlan;
            }
            set
            {
                OnTreatmentPlanChanging(value);
                ReportPropertyChanging("TreatmentPlan");
                _TreatmentPlan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TreatmentPlan");
                OnTreatmentPlanChanged();
            }
        }
        private global::System.String _TreatmentPlan;
        partial void OnTreatmentPlanChanging(global::System.String value);
        partial void OnTreatmentPlanChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CountercheckDate
        {
            get
            {
                return _CountercheckDate;
            }
            set
            {
                OnCountercheckDateChanging(value);
                ReportPropertyChanging("CountercheckDate");
                _CountercheckDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountercheckDate");
                OnCountercheckDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CountercheckDate;
        partial void OnCountercheckDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCountercheckDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PermitHospital
        {
            get
            {
                return _PermitHospital;
            }
            set
            {
                OnPermitHospitalChanging(value);
                ReportPropertyChanging("PermitHospital");
                _PermitHospital = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PermitHospital");
                OnPermitHospitalChanged();
            }
        }
        private global::System.String _PermitHospital;
        partial void OnPermitHospitalChanging(global::System.String value);
        partial void OnPermitHospitalChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_CaseHistory_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_CaseHistory_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_CaseHistory_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("DrPEDatabaseModel.FK_CaseHistory_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Examination", "Examination")]
        public Examination Examination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Examination>("DrPEDatabaseModel.FK_CaseHistory_Examination", "Examination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Examination>("DrPEDatabaseModel.FK_CaseHistory_Examination", "Examination").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Examination> ExaminationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Examination>("DrPEDatabaseModel.FK_CaseHistory_Examination", "Examination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Examination>("DrPEDatabaseModel.FK_CaseHistory_Examination", "Examination", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Hospital", "Hospital")]
        public Hospital Hospital
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_CaseHistory_Hospital", "Hospital").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_CaseHistory_Hospital", "Hospital").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hospital> HospitalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_CaseHistory_Hospital", "Hospital");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hospital>("DrPEDatabaseModel.FK_CaseHistory_Hospital", "Hospital", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Prescription", "Prescription")]
        public Prescription Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("DrPEDatabaseModel.FK_CaseHistory_Prescription", "Prescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("DrPEDatabaseModel.FK_CaseHistory_Prescription", "Prescription").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prescription> PrescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("DrPEDatabaseModel.FK_CaseHistory_Prescription", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prescription>("DrPEDatabaseModel.FK_CaseHistory_Prescription", "Prescription", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Section", "Section")]
        public Section Section
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_CaseHistory_Section", "Section").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_CaseHistory_Section", "Section").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Section> SectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_CaseHistory_Section", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Section>("DrPEDatabaseModel.FK_CaseHistory_Section", "Section", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_CaseHistory_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_CaseHistory_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_CaseHistory_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DrPEDatabaseModel.FK_CaseHistory_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Disease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Disease : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Disease 对象。
        /// </summary>
        /// <param name="diseaseID">DiseaseID 属性的初始值。</param>
        public static Disease CreateDisease(global::System.String diseaseID)
        {
            Disease disease = new Disease();
            disease.DiseaseID = diseaseID;
            return disease;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiseaseID
        {
            get
            {
                return _DiseaseID;
            }
            set
            {
                if (_DiseaseID != value)
                {
                    OnDiseaseIDChanging(value);
                    ReportPropertyChanging("DiseaseID");
                    _DiseaseID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiseaseID");
                    OnDiseaseIDChanged();
                }
            }
        }
        private global::System.String _DiseaseID;
        partial void OnDiseaseIDChanging(global::System.String value);
        partial void OnDiseaseIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notice
        {
            get
            {
                return _Notice;
            }
            set
            {
                OnNoticeChanging(value);
                ReportPropertyChanging("Notice");
                _Notice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notice");
                OnNoticeChanged();
            }
        }
        private global::System.String _Notice;
        partial void OnNoticeChanging(global::System.String value);
        partial void OnNoticeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_WareSense_Disease", "WareSense")]
        public EntityCollection<WareSense> WareSenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WareSense>("DrPEDatabaseModel.FK_WareSense_Disease", "WareSense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WareSense>("DrPEDatabaseModel.FK_WareSense_Disease", "WareSense", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Doctor 对象。
        /// </summary>
        /// <param name="doctorID">DoctorID 属性的初始值。</param>
        /// <param name="sectionID">SectionID 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        public static Doctor CreateDoctor(global::System.String doctorID, global::System.String sectionID, global::System.String password)
        {
            Doctor doctor = new Doctor();
            doctor.DoctorID = doctorID;
            doctor.SectionID = sectionID;
            doctor.Password = password;
            return doctor;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DoctorID
        {
            get
            {
                return _DoctorID;
            }
            set
            {
                if (_DoctorID != value)
                {
                    OnDoctorIDChanging(value);
                    ReportPropertyChanging("DoctorID");
                    _DoctorID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DoctorID");
                    OnDoctorIDChanged();
                }
            }
        }
        private global::System.String _DoctorID;
        partial void OnDoctorIDChanging(global::System.String value);
        partial void OnDoctorIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Resume
        {
            get
            {
                return _Resume;
            }
            set
            {
                OnResumeChanging(value);
                ReportPropertyChanging("Resume");
                _Resume = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Resume");
                OnResumeChanged();
            }
        }
        private global::System.String _Resume;
        partial void OnResumeChanging(global::System.String value);
        partial void OnResumeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SectionID
        {
            get
            {
                return _SectionID;
            }
            set
            {
                OnSectionIDChanging(value);
                ReportPropertyChanging("SectionID");
                _SectionID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SectionID");
                OnSectionIDChanged();
            }
        }
        private global::System.String _SectionID;
        partial void OnSectionIDChanging(global::System.String value);
        partial void OnSectionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Vocation
        {
            get
            {
                return _Vocation;
            }
            set
            {
                OnVocationChanging(value);
                ReportPropertyChanging("Vocation");
                _Vocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Vocation");
                OnVocationChanged();
            }
        }
        private global::System.String _Vocation;
        partial void OnVocationChanging(global::System.String value);
        partial void OnVocationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Portrait
        {
            get
            {
                return StructuralObject.GetValidValue(_Portrait);
            }
            set
            {
                OnPortraitChanging(value);
                ReportPropertyChanging("Portrait");
                _Portrait = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Portrait");
                OnPortraitChanged();
            }
        }
        private global::System.Byte[] _Portrait;
        partial void OnPortraitChanging(global::System.Byte[] value);
        partial void OnPortraitChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Appointment_Doctor", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("DrPEDatabaseModel.FK_Appointment_Doctor", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("DrPEDatabaseModel.FK_Appointment_Doctor", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Doctor", "CaseHistory")]
        public EntityCollection<CaseHistory> CaseHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Doctor", "CaseHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Doctor", "CaseHistory", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Doctor_Section", "Section")]
        public Section Section
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_Doctor_Section", "Section").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_Doctor_Section", "Section").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Section> SectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_Doctor_Section", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Section>("DrPEDatabaseModel.FK_Doctor_Section", "Section", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Doctor_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Doctor_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Doctor_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Doctor_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DrPEDatabaseModel.FK_Doctor_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Schedule_Doctor", "Schedule")]
        public Schedule Schedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("DrPEDatabaseModel.FK_Schedule_Doctor", "Schedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("DrPEDatabaseModel.FK_Schedule_Doctor", "Schedule").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Schedule> ScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("DrPEDatabaseModel.FK_Schedule_Doctor", "Schedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Schedule>("DrPEDatabaseModel.FK_Schedule_Doctor", "Schedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Examination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Examination : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Examination 对象。
        /// </summary>
        /// <param name="examinationID">ExaminationID 属性的初始值。</param>
        public static Examination CreateExamination(global::System.Guid examinationID)
        {
            Examination examination = new Examination();
            examination.ExaminationID = examinationID;
            return examination;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExaminationID
        {
            get
            {
                return _ExaminationID;
            }
            set
            {
                if (_ExaminationID != value)
                {
                    OnExaminationIDChanging(value);
                    ReportPropertyChanging("ExaminationID");
                    _ExaminationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExaminationID");
                    OnExaminationIDChanged();
                }
            }
        }
        private global::System.Guid _ExaminationID;
        partial void OnExaminationIDChanging(global::System.Guid value);
        partial void OnExaminationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Advice
        {
            get
            {
                return _Advice;
            }
            set
            {
                OnAdviceChanging(value);
                ReportPropertyChanging("Advice");
                _Advice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Advice");
                OnAdviceChanged();
            }
        }
        private global::System.String _Advice;
        partial void OnAdviceChanging(global::System.String value);
        partial void OnAdviceChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Examination", "CaseHistory")]
        public EntityCollection<CaseHistory> CaseHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Examination", "CaseHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Examination", "CaseHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Hospital")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hospital : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Hospital 对象。
        /// </summary>
        /// <param name="hospitalID">HospitalID 属性的初始值。</param>
        public static Hospital CreateHospital(global::System.String hospitalID)
        {
            Hospital hospital = new Hospital();
            hospital.HospitalID = hospitalID;
            return hospital;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HospitalID
        {
            get
            {
                return _HospitalID;
            }
            set
            {
                if (_HospitalID != value)
                {
                    OnHospitalIDChanging(value);
                    ReportPropertyChanging("HospitalID");
                    _HospitalID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HospitalID");
                    OnHospitalIDChanged();
                }
            }
        }
        private global::System.String _HospitalID;
        partial void OnHospitalIDChanging(global::System.String value);
        partial void OnHospitalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Grade
        {
            get
            {
                return _Grade;
            }
            set
            {
                OnGradeChanging(value);
                ReportPropertyChanging("Grade");
                _Grade = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Grade");
                OnGradeChanged();
            }
        }
        private global::System.String _Grade;
        partial void OnGradeChanging(global::System.String value);
        partial void OnGradeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Features
        {
            get
            {
                return _Features;
            }
            set
            {
                OnFeaturesChanging(value);
                ReportPropertyChanging("Features");
                _Features = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Features");
                OnFeaturesChanged();
            }
        }
        private global::System.String _Features;
        partial void OnFeaturesChanging(global::System.String value);
        partial void OnFeaturesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Bed
        {
            get
            {
                return _Bed;
            }
            set
            {
                OnBedChanging(value);
                ReportPropertyChanging("Bed");
                _Bed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bed");
                OnBedChanged();
            }
        }
        private Nullable<global::System.Int32> _Bed;
        partial void OnBedChanging(Nullable<global::System.Int32> value);
        partial void OnBedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RegistrationBalance
        {
            get
            {
                return _RegistrationBalance;
            }
            set
            {
                OnRegistrationBalanceChanging(value);
                ReportPropertyChanging("RegistrationBalance");
                _RegistrationBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationBalance");
                OnRegistrationBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _RegistrationBalance;
        partial void OnRegistrationBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnRegistrationBalanceChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Analyst_Hospital", "Analyst")]
        public EntityCollection<Analyst> Analysts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Analyst>("DrPEDatabaseModel.FK_Analyst_Hospital", "Analyst");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Analyst>("DrPEDatabaseModel.FK_Analyst_Hospital", "Analyst", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Hospital", "CaseHistory")]
        public EntityCollection<CaseHistory> CaseHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Hospital", "CaseHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Hospital", "CaseHistory", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Pharmacy_Hospital", "Pharmacy")]
        public EntityCollection<Pharmacy> Pharmacies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pharmacy>("DrPEDatabaseModel.FK_Pharmacy_Hospital", "Pharmacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pharmacy>("DrPEDatabaseModel.FK_Pharmacy_Hospital", "Pharmacy", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Section_Hospital", "Section")]
        public EntityCollection<Section> Sections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Section>("DrPEDatabaseModel.FK_Section_Hospital", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Section>("DrPEDatabaseModel.FK_Section_Hospital", "Section", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Master : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Master 对象。
        /// </summary>
        /// <param name="masterID">MasterID 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        public static Master CreateMaster(global::System.String masterID, global::System.String password)
        {
            Master master = new Master();
            master.MasterID = masterID;
            master.Password = password;
            return master;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MasterID
        {
            get
            {
                return _MasterID;
            }
            set
            {
                if (_MasterID != value)
                {
                    OnMasterIDChanging(value);
                    ReportPropertyChanging("MasterID");
                    _MasterID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MasterID");
                    OnMasterIDChanged();
                }
            }
        }
        private global::System.String _MasterID;
        partial void OnMasterIDChanging(global::System.String value);
        partial void OnMasterIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Message 对象。
        /// </summary>
        /// <param name="messageID">MessageID 属性的初始值。</param>
        /// <param name="receiver">Receiver 属性的初始值。</param>
        public static Message CreateMessage(global::System.Guid messageID, global::System.String receiver)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.Receiver = receiver;
            return message;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Guid _MessageID;
        partial void OnMessageIDChanging(global::System.Guid value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sender
        {
            get
            {
                return _Sender;
            }
            set
            {
                OnSenderChanging(value);
                ReportPropertyChanging("Sender");
                _Sender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sender");
                OnSenderChanged();
            }
        }
        private global::System.String _Sender;
        partial void OnSenderChanging(global::System.String value);
        partial void OnSenderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Receiver
        {
            get
            {
                return _Receiver;
            }
            set
            {
                OnReceiverChanging(value);
                ReportPropertyChanging("Receiver");
                _Receiver = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Receiver");
                OnReceiverChanged();
            }
        }
        private global::System.String _Receiver;
        partial void OnReceiverChanging(global::System.String value);
        partial void OnReceiverChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Pharmacy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pharmacy : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Pharmacy 对象。
        /// </summary>
        /// <param name="pharmacyID">PharmacyID 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        public static Pharmacy CreatePharmacy(global::System.String pharmacyID, global::System.String password)
        {
            Pharmacy pharmacy = new Pharmacy();
            pharmacy.PharmacyID = pharmacyID;
            pharmacy.Password = password;
            return pharmacy;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PharmacyID
        {
            get
            {
                return _PharmacyID;
            }
            set
            {
                if (_PharmacyID != value)
                {
                    OnPharmacyIDChanging(value);
                    ReportPropertyChanging("PharmacyID");
                    _PharmacyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PharmacyID");
                    OnPharmacyIDChanged();
                }
            }
        }
        private global::System.String _PharmacyID;
        partial void OnPharmacyIDChanging(global::System.String value);
        partial void OnPharmacyIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HospitalID
        {
            get
            {
                return _HospitalID;
            }
            set
            {
                OnHospitalIDChanging(value);
                ReportPropertyChanging("HospitalID");
                _HospitalID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HospitalID");
                OnHospitalIDChanged();
            }
        }
        private global::System.String _HospitalID;
        partial void OnHospitalIDChanging(global::System.String value);
        partial void OnHospitalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnBalanceChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Pharmacy_Hospital", "Hospital")]
        public Hospital Hospital
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Pharmacy_Hospital", "Hospital").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Pharmacy_Hospital", "Hospital").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hospital> HospitalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Pharmacy_Hospital", "Hospital");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hospital>("DrPEDatabaseModel.FK_Pharmacy_Hospital", "Hospital", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_PharmacyDatabase_Pharmacy", "PharmacyDatabase")]
        public EntityCollection<PharmacyDatabase> PharmacyDatabases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PharmacyDatabase>("DrPEDatabaseModel.FK_PharmacyDatabase_Pharmacy", "PharmacyDatabase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PharmacyDatabase>("DrPEDatabaseModel.FK_PharmacyDatabase_Pharmacy", "PharmacyDatabase", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Transaction_Pharmacy", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("DrPEDatabaseModel.FK_Transaction_Pharmacy", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("DrPEDatabaseModel.FK_Transaction_Pharmacy", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="PharmacyDatabase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PharmacyDatabase : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PharmacyDatabase 对象。
        /// </summary>
        /// <param name="pharmacyID">PharmacyID 属性的初始值。</param>
        /// <param name="physicID">PhysicID 属性的初始值。</param>
        public static PharmacyDatabase CreatePharmacyDatabase(global::System.String pharmacyID, global::System.String physicID)
        {
            PharmacyDatabase pharmacyDatabase = new PharmacyDatabase();
            pharmacyDatabase.PharmacyID = pharmacyID;
            pharmacyDatabase.PhysicID = physicID;
            return pharmacyDatabase;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PharmacyID
        {
            get
            {
                return _PharmacyID;
            }
            set
            {
                if (_PharmacyID != value)
                {
                    OnPharmacyIDChanging(value);
                    ReportPropertyChanging("PharmacyID");
                    _PharmacyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PharmacyID");
                    OnPharmacyIDChanged();
                }
            }
        }
        private global::System.String _PharmacyID;
        partial void OnPharmacyIDChanging(global::System.String value);
        partial void OnPharmacyIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicID
        {
            get
            {
                return _PhysicID;
            }
            set
            {
                if (_PhysicID != value)
                {
                    OnPhysicIDChanging(value);
                    ReportPropertyChanging("PhysicID");
                    _PhysicID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PhysicID");
                    OnPhysicIDChanged();
                }
            }
        }
        private global::System.String _PhysicID;
        partial void OnPhysicIDChanging(global::System.String value);
        partial void OnPhysicIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_PharmacyDatabase_Pharmacy", "Pharmacy")]
        public Pharmacy Pharmacy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DrPEDatabaseModel.FK_PharmacyDatabase_Pharmacy", "Pharmacy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DrPEDatabaseModel.FK_PharmacyDatabase_Pharmacy", "Pharmacy").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pharmacy> PharmacyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DrPEDatabaseModel.FK_PharmacyDatabase_Pharmacy", "Pharmacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pharmacy>("DrPEDatabaseModel.FK_PharmacyDatabase_Pharmacy", "Pharmacy", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_PharmacyDatabase_Physic", "Physic")]
        public Physic Physic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Physic>("DrPEDatabaseModel.FK_PharmacyDatabase_Physic", "Physic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Physic>("DrPEDatabaseModel.FK_PharmacyDatabase_Physic", "Physic").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Physic> PhysicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Physic>("DrPEDatabaseModel.FK_PharmacyDatabase_Physic", "Physic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Physic>("DrPEDatabaseModel.FK_PharmacyDatabase_Physic", "Physic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Physic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Physic : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Physic 对象。
        /// </summary>
        /// <param name="physicID">PhysicID 属性的初始值。</param>
        public static Physic CreatePhysic(global::System.String physicID)
        {
            Physic physic = new Physic();
            physic.PhysicID = physicID;
            return physic;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicID
        {
            get
            {
                return _PhysicID;
            }
            set
            {
                if (_PhysicID != value)
                {
                    OnPhysicIDChanging(value);
                    ReportPropertyChanging("PhysicID");
                    _PhysicID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PhysicID");
                    OnPhysicIDChanged();
                }
            }
        }
        private global::System.String _PhysicID;
        partial void OnPhysicIDChanging(global::System.String value);
        partial void OnPhysicIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notice
        {
            get
            {
                return _Notice;
            }
            set
            {
                OnNoticeChanging(value);
                ReportPropertyChanging("Notice");
                _Notice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notice");
                OnNoticeChanged();
            }
        }
        private global::System.String _Notice;
        partial void OnNoticeChanging(global::System.String value);
        partial void OnNoticeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_PharmacyDatabase_Physic", "PharmacyDatabase")]
        public EntityCollection<PharmacyDatabase> PharmacyDatabases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PharmacyDatabase>("DrPEDatabaseModel.FK_PharmacyDatabase_Physic", "PharmacyDatabase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PharmacyDatabase>("DrPEDatabaseModel.FK_PharmacyDatabase_Physic", "PharmacyDatabase", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Prescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prescription : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Prescription 对象。
        /// </summary>
        /// <param name="prescriptionID">PrescriptionID 属性的初始值。</param>
        public static Prescription CreatePrescription(global::System.Guid prescriptionID)
        {
            Prescription prescription = new Prescription();
            prescription.PrescriptionID = prescriptionID;
            return prescription;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PrescriptionID
        {
            get
            {
                return _PrescriptionID;
            }
            set
            {
                if (_PrescriptionID != value)
                {
                    OnPrescriptionIDChanging(value);
                    ReportPropertyChanging("PrescriptionID");
                    _PrescriptionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrescriptionID");
                    OnPrescriptionIDChanged();
                }
            }
        }
        private global::System.Guid _PrescriptionID;
        partial void OnPrescriptionIDChanging(global::System.Guid value);
        partial void OnPrescriptionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Prescription", "CaseHistory")]
        public EntityCollection<CaseHistory> CaseHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Prescription", "CaseHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Prescription", "CaseHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Schedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Schedule : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Schedule 对象。
        /// </summary>
        /// <param name="doctorID">DoctorID 属性的初始值。</param>
        public static Schedule CreateSchedule(global::System.String doctorID)
        {
            Schedule schedule = new Schedule();
            schedule.DoctorID = doctorID;
            return schedule;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DoctorID
        {
            get
            {
                return _DoctorID;
            }
            set
            {
                if (_DoctorID != value)
                {
                    OnDoctorIDChanging(value);
                    ReportPropertyChanging("DoctorID");
                    _DoctorID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DoctorID");
                    OnDoctorIDChanged();
                }
            }
        }
        private global::System.String _DoctorID;
        partial void OnDoctorIDChanging(global::System.String value);
        partial void OnDoctorIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Weekday
        {
            get
            {
                return _Weekday;
            }
            set
            {
                OnWeekdayChanging(value);
                ReportPropertyChanging("Weekday");
                _Weekday = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Weekday");
                OnWeekdayChanged();
            }
        }
        private global::System.String _Weekday;
        partial void OnWeekdayChanging(global::System.String value);
        partial void OnWeekdayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Addition
        {
            get
            {
                return _Addition;
            }
            set
            {
                OnAdditionChanging(value);
                ReportPropertyChanging("Addition");
                _Addition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Addition");
                OnAdditionChanged();
            }
        }
        private Nullable<global::System.DateTime> _Addition;
        partial void OnAdditionChanging(Nullable<global::System.DateTime> value);
        partial void OnAdditionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private Nullable<global::System.DateTime> _Exception;
        partial void OnExceptionChanging(Nullable<global::System.DateTime> value);
        partial void OnExceptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _Capacity;
        partial void OnCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastCheck
        {
            get
            {
                return _LastCheck;
            }
            set
            {
                OnLastCheckChanging(value);
                ReportPropertyChanging("LastCheck");
                _LastCheck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastCheck");
                OnLastCheckChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastCheck;
        partial void OnLastCheckChanging(Nullable<global::System.DateTime> value);
        partial void OnLastCheckChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Schedule_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_Schedule_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_Schedule_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("DrPEDatabaseModel.FK_Schedule_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("DrPEDatabaseModel.FK_Schedule_Doctor", "Doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Section")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Section : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Section 对象。
        /// </summary>
        /// <param name="sectionID">SectionID 属性的初始值。</param>
        /// <param name="hospitalID">HospitalID 属性的初始值。</param>
        public static Section CreateSection(global::System.String sectionID, global::System.String hospitalID)
        {
            Section section = new Section();
            section.SectionID = sectionID;
            section.HospitalID = hospitalID;
            return section;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SectionID
        {
            get
            {
                return _SectionID;
            }
            set
            {
                if (_SectionID != value)
                {
                    OnSectionIDChanging(value);
                    ReportPropertyChanging("SectionID");
                    _SectionID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SectionID");
                    OnSectionIDChanged();
                }
            }
        }
        private global::System.String _SectionID;
        partial void OnSectionIDChanging(global::System.String value);
        partial void OnSectionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HospitalID
        {
            get
            {
                return _HospitalID;
            }
            set
            {
                OnHospitalIDChanging(value);
                ReportPropertyChanging("HospitalID");
                _HospitalID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HospitalID");
                OnHospitalIDChanged();
            }
        }
        private global::System.String _HospitalID;
        partial void OnHospitalIDChanging(global::System.String value);
        partial void OnHospitalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_Section", "CaseHistory")]
        public EntityCollection<CaseHistory> CaseHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Section", "CaseHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_Section", "CaseHistory", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Doctor_Section", "Doctor")]
        public EntityCollection<Doctor> Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctor>("DrPEDatabaseModel.FK_Doctor_Section", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctor>("DrPEDatabaseModel.FK_Doctor_Section", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Section_Hospital", "Hospital")]
        public Hospital Hospital
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Section_Hospital", "Hospital").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Section_Hospital", "Hospital").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hospital> HospitalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hospital>("DrPEDatabaseModel.FK_Section_Hospital", "Hospital");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hospital>("DrPEDatabaseModel.FK_Section_Hospital", "Hospital", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_VerandaLonely_Section", "VerandaLonely")]
        public EntityCollection<VerandaLonely> VerandaLonelies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VerandaLonely>("DrPEDatabaseModel.FK_VerandaLonely_Section", "VerandaLonely");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VerandaLonely>("DrPEDatabaseModel.FK_VerandaLonely_Section", "VerandaLonely", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Transaction 对象。
        /// </summary>
        /// <param name="transactionID">TransactionID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        public static Transaction CreateTransaction(global::System.Guid transactionID, global::System.String userID)
        {
            Transaction transaction = new Transaction();
            transaction.TransactionID = transactionID;
            transaction.UserID = userID;
            return transaction;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PharmacyID
        {
            get
            {
                return _PharmacyID;
            }
            set
            {
                OnPharmacyIDChanging(value);
                ReportPropertyChanging("PharmacyID");
                _PharmacyID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PharmacyID");
                OnPharmacyIDChanged();
            }
        }
        private global::System.String _PharmacyID;
        partial void OnPharmacyIDChanging(global::System.String value);
        partial void OnPharmacyIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Transaction_Pharmacy", "Pharmacy")]
        public Pharmacy Pharmacy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DrPEDatabaseModel.FK_Transaction_Pharmacy", "Pharmacy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DrPEDatabaseModel.FK_Transaction_Pharmacy", "Pharmacy").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pharmacy> PharmacyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DrPEDatabaseModel.FK_Transaction_Pharmacy", "Pharmacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pharmacy>("DrPEDatabaseModel.FK_Transaction_Pharmacy", "Pharmacy", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Transaction_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Transaction_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Transaction_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_Transaction_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DrPEDatabaseModel.FK_Transaction_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="payPassword">PayPassword 属性的初始值。</param>
        public static User CreateUser(global::System.String userID, global::System.String password, global::System.String payPassword)
        {
            User user = new User();
            user.UserID = userID;
            user.Password = password;
            user.PayPassword = payPassword;
            return user;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ABO
        {
            get
            {
                return _ABO;
            }
            set
            {
                OnABOChanging(value);
                ReportPropertyChanging("ABO");
                _ABO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ABO");
                OnABOChanged();
            }
        }
        private global::System.String _ABO;
        partial void OnABOChanging(global::System.String value);
        partial void OnABOChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rh
        {
            get
            {
                return _Rh;
            }
            set
            {
                OnRhChanging(value);
                ReportPropertyChanging("Rh");
                _Rh = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rh");
                OnRhChanged();
            }
        }
        private global::System.String _Rh;
        partial void OnRhChanging(global::System.String value);
        partial void OnRhChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Birthplace
        {
            get
            {
                return _Birthplace;
            }
            set
            {
                OnBirthplaceChanging(value);
                ReportPropertyChanging("Birthplace");
                _Birthplace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Birthplace");
                OnBirthplaceChanged();
            }
        }
        private global::System.String _Birthplace;
        partial void OnBirthplaceChanging(global::System.String value);
        partial void OnBirthplaceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Deathplace
        {
            get
            {
                return _Deathplace;
            }
            set
            {
                OnDeathplaceChanging(value);
                ReportPropertyChanging("Deathplace");
                _Deathplace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Deathplace");
                OnDeathplaceChanged();
            }
        }
        private global::System.String _Deathplace;
        partial void OnDeathplaceChanging(global::System.String value);
        partial void OnDeathplaceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Deathday
        {
            get
            {
                return _Deathday;
            }
            set
            {
                OnDeathdayChanging(value);
                ReportPropertyChanging("Deathday");
                _Deathday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deathday");
                OnDeathdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Deathday;
        partial void OnDeathdayChanging(Nullable<global::System.DateTime> value);
        partial void OnDeathdayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PayPassword
        {
            get
            {
                return _PayPassword;
            }
            set
            {
                OnPayPasswordChanging(value);
                ReportPropertyChanging("PayPassword");
                _PayPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PayPassword");
                OnPayPasswordChanged();
            }
        }
        private global::System.String _PayPassword;
        partial void OnPayPasswordChanging(global::System.String value);
        partial void OnPayPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactPerson
        {
            get
            {
                return _EmergencyContactPerson;
            }
            set
            {
                OnEmergencyContactPersonChanging(value);
                ReportPropertyChanging("EmergencyContactPerson");
                _EmergencyContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmergencyContactPerson");
                OnEmergencyContactPersonChanged();
            }
        }
        private global::System.String _EmergencyContactPerson;
        partial void OnEmergencyContactPersonChanging(global::System.String value);
        partial void OnEmergencyContactPersonChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Appointment_User", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("DrPEDatabaseModel.FK_Appointment_User", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("DrPEDatabaseModel.FK_Appointment_User", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_CaseHistory_User", "CaseHistory")]
        public EntityCollection<CaseHistory> CaseHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_User", "CaseHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CaseHistory>("DrPEDatabaseModel.FK_CaseHistory_User", "CaseHistory", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Doctor_User", "Doctor")]
        public EntityCollection<Doctor> Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctor>("DrPEDatabaseModel.FK_Doctor_User", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctor>("DrPEDatabaseModel.FK_Doctor_User", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_Transaction_User", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("DrPEDatabaseModel.FK_Transaction_User", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("DrPEDatabaseModel.FK_Transaction_User", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_User_User1", "User1")]
        public EntityCollection<User> User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DrPEDatabaseModel.FK_User_User1", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DrPEDatabaseModel.FK_User_User1", "User1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_User_User1", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_User_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_User_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DrPEDatabaseModel.FK_User_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DrPEDatabaseModel.FK_User_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="VerandaLonely")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VerandaLonely : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VerandaLonely 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static VerandaLonely CreateVerandaLonely(global::System.Int64 id)
        {
            VerandaLonely verandaLonely = new VerandaLonely();
            verandaLonely.ID = id;
            return verandaLonely;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SectionID
        {
            get
            {
                return _SectionID;
            }
            set
            {
                OnSectionIDChanging(value);
                ReportPropertyChanging("SectionID");
                _SectionID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SectionID");
                OnSectionIDChanged();
            }
        }
        private global::System.String _SectionID;
        partial void OnSectionIDChanging(global::System.String value);
        partial void OnSectionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_VerandaLonely_Section", "Section")]
        public Section Section
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_VerandaLonely_Section", "Section").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_VerandaLonely_Section", "Section").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Section> SectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("DrPEDatabaseModel.FK_VerandaLonely_Section", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Section>("DrPEDatabaseModel.FK_VerandaLonely_Section", "Section", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DrPEDatabaseModel", Name="WareSense")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WareSense : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WareSense 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static WareSense CreateWareSense(global::System.Int64 id)
        {
            WareSense wareSense = new WareSense();
            wareSense.ID = id;
            return wareSense;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiseaseID
        {
            get
            {
                return _DiseaseID;
            }
            set
            {
                OnDiseaseIDChanging(value);
                ReportPropertyChanging("DiseaseID");
                _DiseaseID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiseaseID");
                OnDiseaseIDChanged();
            }
        }
        private global::System.String _DiseaseID;
        partial void OnDiseaseIDChanging(global::System.String value);
        partial void OnDiseaseIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DrPEDatabaseModel", "FK_WareSense_Disease", "Disease")]
        public Disease Disease
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disease>("DrPEDatabaseModel.FK_WareSense_Disease", "Disease").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disease>("DrPEDatabaseModel.FK_WareSense_Disease", "Disease").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disease> DiseaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disease>("DrPEDatabaseModel.FK_WareSense_Disease", "Disease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disease>("DrPEDatabaseModel.FK_WareSense_Disease", "Disease", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
